//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.20 at 09:01:50 AM CEST 
//


package org.opcfoundation.ua._2008._02.types;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ServerState.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ServerState">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Running_0"/>
 *     &lt;enumeration value="Failed_1"/>
 *     &lt;enumeration value="NoConfiguration_2"/>
 *     &lt;enumeration value="Suspended_3"/>
 *     &lt;enumeration value="Shutdown_4"/>
 *     &lt;enumeration value="Test_5"/>
 *     &lt;enumeration value="CommunicationFault_6"/>
 *     &lt;enumeration value="Unknown_7"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ServerState")
@XmlEnum
public enum ServerState {

    @XmlEnumValue("Running_0")
    RUNNING_0("Running_0"),
    @XmlEnumValue("Failed_1")
    FAILED_1("Failed_1"),
    @XmlEnumValue("NoConfiguration_2")
    NO_CONFIGURATION_2("NoConfiguration_2"),
    @XmlEnumValue("Suspended_3")
    SUSPENDED_3("Suspended_3"),
    @XmlEnumValue("Shutdown_4")
    SHUTDOWN_4("Shutdown_4"),
    @XmlEnumValue("Test_5")
    TEST_5("Test_5"),
    @XmlEnumValue("CommunicationFault_6")
    COMMUNICATION_FAULT_6("CommunicationFault_6"),
    @XmlEnumValue("Unknown_7")
    UNKNOWN_7("Unknown_7");
    private final String value;

    ServerState(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ServerState fromValue(String v) {
        for (ServerState c: ServerState.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
